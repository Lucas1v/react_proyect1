{"version":3,"sources":["store.js","components/Quote.jsx","App.js","reportWebVitals.js","index.js"],"names":["quotes","id","frase","color","autor","initialState","quote","Math","floor","random","createStore","state","action","type","connect","dispatch","nextQuote","style","backgroundColor","href","rel","target","className","onClick","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAEMA,EAAS,CACX,CACIC,GAAI,EACJC,MAAO,2CACPC,MAAO,QACPC,MAAO,cAEX,CACIH,GAAI,EACJC,MAAO,8FACPC,MAAO,OACPC,MAAO,8BAEX,CACIH,GAAI,EACJC,MAAO,qDACPC,MAAO,OACPC,MAAO,WAITC,EAAe,CACjBC,MAAON,EAAOO,KAAKC,MAAsB,EAAhBD,KAAKE,YAoBnBC,eAjBM,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACnD,OAAOA,EAAOC,MACV,IAAK,YACD,OAAsB,IAAnBF,EAAML,MAAML,GACJ,CACHK,MAAON,EAAO,IAGX,CACHM,MAAON,EAAOW,EAAML,MAAML,GAAK,IAG3C,QACI,OAAOU,M,OCTJG,eAZQ,SAAAH,GAAK,MAAK,CAC7BL,MAAQK,EAAML,UAGS,SAAAS,GAAQ,MAAK,CACpCC,UADoC,WAEhCD,EAAS,CACLF,KAAM,kBAKHC,EA1BD,SAAC,GAAD,IAAER,EAAF,EAAEA,MAAOU,EAAT,EAASA,UAAT,OACV,qBAAKf,GAAG,YAAYgB,MAAO,CAACC,gBAAiBZ,EAAMH,OAAnD,SACI,sBAAKF,GAAG,YAAR,UACI,sBAAKA,GAAG,UAAR,UACI,sBAAMA,GAAG,OAAOgB,MAAO,CAACd,MAAOG,EAAMH,OAArC,SAA8CG,EAAMJ,QACpD,uBAAMD,GAAG,SAASgB,MAAO,CAACd,MAAOG,EAAMH,OAAvC,eAAkDG,EAAMF,SACxD,mBAAGa,MAAO,CAACC,gBAAiBZ,EAAMH,OAAQgB,KAAK,mCAAmCC,IAAI,aAAaC,OAAO,SAASC,UAAU,QAAQrB,GAAG,cAAxI,gBACA,mBAAGgB,MAAO,CAACC,gBAAiBZ,EAAMH,OAAQgB,KAAK,mCAAmCC,IAAI,aAAYC,OAAO,SAASC,UAAU,QAAQrB,GAAG,YAAvI,iBACA,wBAAQgB,MAAO,CAACC,gBAAiBZ,EAAMH,OAAQF,GAAG,YAAYoB,OAAO,SAASE,QAAS,kBAAMP,KAA7F,0BAEJ,mBAAGK,OAAO,SAASF,KAAK,6BAA6BlB,GAAG,UAAUmB,IAAI,aAAtE,6BCDGI,MARf,WACE,OACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e40184b4.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst quotes = [\r\n    {\r\n        id: 0,\r\n        frase: \"If you can dream it, you can achieve it.\",\r\n        color: \"green\",\r\n        autor: \"Zig Ziglar\"\r\n    },\r\n    {\r\n        id: 1,\r\n        frase: \"hatever you can do, or dream you can, begin it. Boldness has genius, power and magic in it.\",\r\n        color: \"grey\",\r\n        autor: \"Johann Wolfgang von Goethe\"\r\n    },\r\n    {\r\n        id: 2,\r\n        frase: \"The mind is everything. What you think you become.\",\r\n        color: \"blue\",\r\n        autor: \"Buddha\"\r\n    }\r\n];\r\n\r\nconst initialState = {\r\n    quote: quotes[Math.floor(Math.random() * 3)]\r\n};\r\n\r\nconst reducerQuote = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"NEXTQUOTE\":\r\n            if(state.quote.id === 2){\r\n                return {\r\n                    quote: quotes[0]\r\n                }\r\n            }else{\r\n                return {\r\n                    quote: quotes[state.quote.id + 1]\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default createStore(reducerQuote);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst Quote = ({quote, nextQuote}) => (\r\n    <div id=\"principal\" style={{backgroundColor: quote.color}}>\r\n        <div id=\"quote-box\">\r\n            <div id=\"segunda\">\r\n                <span id=\"text\" style={{color: quote.color}}>{quote.frase}</span>\r\n                <span id=\"author\" style={{color: quote.color}}>- {quote.autor}</span>\r\n                <a style={{backgroundColor: quote.color}} href=\"https://twitter.com/intent/tweet\" rel=\"noreferrer\" target=\"_blank\" className=\"redes\" id=\"tweet-quote\">tw</a>\r\n                <a style={{backgroundColor: quote.color}} href=\"https://twitter.com/intent/tweet\" rel=\"noreferrer\"target=\"_blank\" className=\"redes\" id=\"tum-quote\">tum</a>\r\n                <button style={{backgroundColor: quote.color}} id=\"new-quote\" target=\"_blank\" onClick={() => nextQuote()}>New quote</button>\r\n            </div>\r\n            <a target=\"_blank\" href=\"https://github.com/Lucas1v\" id=\"creator\" rel=\"noreferrer\">by cuby</a>\r\n        </div>\r\n    </div>\r\n)\r\nconst mapStateToPops = state => ({\r\n    quote : state.quote\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    nextQuote() {\r\n        dispatch({\r\n            type: \"NEXTQUOTE\"\r\n        });\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToPops, mapDispatchToProps)(Quote);\r\n","import './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store.js';\nimport Quote from \"./components/Quote.jsx\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Quote />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}